Q1. Write a blog on the difference between document and window objects.
Ans.
Document Object: The document object represent a web page that is loaded in the browser. By accessing the document object, we can access the element in the HTML page. With the help of document objects, we can add dynamic content to our web page. The document object can be accessed with a window.document or just document.

Properties of document:

Syntax: document.property_name;

Some of the properties of document are:

activeElement: It returns the currently active elements in the document.
body: It returns the contents of the body element.
anchors: It returns all <a> elements that have a name attribute.
defaultView: It returns the current Window Object.
doctype: It returns the document’s doctype.
URL: It returns the complete URL of the document.
forms: It returns all the elements of the form.
fullScreenElement: It returns the element that is currently present in full-screen mode.
title: It returns the title element of the document.
head: It returns the head element of the document.
links: It returns all <area> and <a> elements that have a href attribute.
images: It returns the collection of <img> elements in the document.
readyState: It returns the loading status of the current document.



Methods of document:

Syntax: document.method_name;

Some of the methods of document are:

addEventListener(): It is used to attach an event handler to the specified element.
close(): It is used to close the output stream.
createAttribute(): It is used to create an attribute node with the specified name and returns the attribute object.
createElement(): It is used to create HTML element .
createEvent(): It is used to create a new events object.
createTextNode(): It is used to create a textnode.
getElementById(): It returns the object of the given ID. If no object with that id exists then it returns null.
getElementsByClassName(): It returns an object containing all the elements with the specified class names in the document as objects.
getElementsByName(): It returns an object containing all the elements with the specified name in the document as objects.
getElementsByTagName(): It returns an object containing all the elements with the specified tag names in the document as objects.


Implementation:

<!DOCTYPE html>
<html>

<head>
	<title>Document Object Implementation</title>
</head>

<body>
	<h1>Document Object Implementation</h1>
	<button onclick="myFunc()">Click for more Information</button>
	<p id="sample"></p>

	<script>
		function myFunc() {
			var title = document.title;
			var domain = document.domain;
			var body = document.body;
			document.getElementById("sample").innerHTML =
			"The Title of the Document is : "
			+ title
			+ "<br>"
			+ "Domain : "
			+ domain
			+ "<br>"
			+ "Body : "
			+ body;
		}
	</script>
</body>

</html>


                        ----- Document Object End -----



                        ----- Window Object Start -----


Window Object: The window object is the topmost object of the DOM hierarchy. It represents a browser window or frame that displays the contents of the webpage. Whenever a window appears on the screen to display the contents of the document, the window object is created. 

Syntax: window.property_name;

Some of the properties of the window:

Closed: It holds a Boolean value that represents whether the window is closed or not.
console: It returns a reference to the console object which provides access to the browser’s debugging console.
defaultStatus: It is used to define the default message that will be displayed in the status bar when no activity is carried on by the browser.
Document: It returns a reference to the document object of that window.
frames[]: It represents an array that contains all the frames of a given window.
DOMPoint: It returns a reference to a DOMPoint object, which represents a 2D or 3D point in a coordinate system.
Length: It represents the number of frames in the current window.
fullScreen: This property indicates whether the window is displayed on full screen or not.
innerHeight: It is used to get the height of the content area of the browser window.
innerWidth: It is used to get the width of the content area of the browser window.
Name: It contains the name of the referenced window.
Parent: It refers to the frameset in which the current frame is contained.
Screen: It refers to the screen object


Methods of Window:

Syntax: window.method_name;

Some of the methods of Window objects are:

alert(): It is used to display an alert box. It displays a specified message along with an OK button and is generally used to make sure that the information comes through the user.
clearInterval(): It clears the interval which has been set by the setInterval() function before that.
clearTimeout(): It clears the timeout which has been set by the setTimeout()function before that.
close(): It is used for closing a certain window or tab of the browser which was previously opened.
confirm(): It is used to display a modal dialog with an optional message and two buttons i.e. OK and Cancel. It returns true if the user clicks “OK”, and false otherwise.
focus(): It is used to give focus to an element in the current window.
open(): It is used to open a new tab or window with the specified URL and name.
moveTo(): It is used in the window to move the window from the left and top coordinates.
prompt(): It is used to display a dialog with an optional message prompting the user to input some text
scrollBy(): It is used to scroll the document by the given number of pixels.
scrollTo(): It is used to scroll to a particular set of coordinates in the document.
setInterval(): It repeats a given function at every given time interval.
setTimeout(): It executes a function, after waiting a specified number of milliseconds.
stop(): It is used to stop the window from loading resources in the current browsing context.


Implementation:

<!DOCTYPE html>
<html>

<head>
	<title>Window's Properties</title>
</head>

<body>
	<h1>Window's Properties Implementation</h1>
	<button onclick="show()">Show</button>
	<p id="prop"></p>

	<script>
		function show() {
			var h = window.innerHeight;
			var w = window.innerWidth;
			var c = window.closed;
			document.getElementById("prop").innerHTML =
			"Frame's Height: "
			+ h + "<br>"
			+ "Frame's Width: "
			+ w + "<br>"
			+ "<br>"
			+ "Window Closed: "
			+ c;
		}
	</script>
</body>

</html>


Difference between document and window:

                                document                                                                                                                                            window
                                
1. It represents any HTML document or web page that is loaded in the browser.                                                               1. It represents a browser window or frame that displays the contents of the webpage.

2. It is loaded inside the window.                                                                                                          2. It is the very first object that is loaded in the browser.

3. It is the object of window property.                                                                                                     3. It is the object of the browser.

4. All the tags, elements with attributes in HTML are part of the document.                                                                 4. Global objects, functions, and variables of JavaScript are members of the window object.

5. We can access the document from a window using the window. document.                                                                     5. We can access the window from the window only. i.e. window.window

6. The document is part of BOM (browser object model) and dom (Document object model).                                                      6. The window is part of BOM, not DOM.

7. Properties of document objects such as title, body, cookies, etc can also be accessed by a window like this window. document.title       7.Properties of the window object cannot be accessed by the document object.

Syntax: document.propertyname;                                                                                                              syntax: window.propertyname;

Example: document.title :  will return the title of the document.                                                                           Example: window.innerHeight : will return the height of the content area of the browser.
